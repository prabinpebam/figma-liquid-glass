{
  "name": "liquid-glass",
  "version": "1.0.0",
  "description": "A Figma plugin for creating liquid glass effects",
  "main": "dist/code.js",
  "scripts": {
    "build:clear": "node -e \"const fs = require('fs'); if (fs.existsSync('dist')) fs.rmSync('dist', {recursive: true, force: true});\"",
    "build:dirs": "node -e \"const fs = require('fs'); fs.mkdirSync('dist', {recursive: true}); fs.mkdirSync('dist/ui', {recursive: true});\"",
    "build:code": "esbuild src/code.ts --bundle --outfile=dist/code.js --target=es2017 --format=iife --external:__html__",
    "build:ui": "esbuild src/ui/index.ts --bundle --outfile=dist/ui/index.js --target=es2017 --format=iife",
    "build:html": "node -e \"const fs = require('fs'); const html = fs.readFileSync('src/ui/index.html', 'utf8'); const css = fs.readFileSync('src/ui/styles/main.css', 'utf8'); const inlinedHtml = html.replace('<link rel=\\\"stylesheet\\\" href=\\\"styles/main.css\\\">', '<style>' + css + '</style>').replace('<script type=\\\"module\\\" src=\\\"index.js\\\"></script>', '<script>' + fs.readFileSync('dist/ui/index.js', 'utf8') + '</script>'); fs.writeFileSync('dist/ui/index.html', inlinedHtml);\"",
    "build": "npm run build:clear && npm run build:dirs && npm run build:code && npm run build:ui && npm run build:html",
    "watch:code": "esbuild src/code.ts --bundle --outfile=dist/code.js --target=es2017 --format=iife --external:__html__ --watch",
    "watch:ui": "esbuild src/ui/index.ts --bundle --outfile=dist/ui/index.js --target=es2017 --format=iife --watch",
    "watch": "npm-run-all --parallel watch:*",
    "dev": "npm run build && npm run watch",
    "test:build": "npm run build && echo Build test completed successfully",
    "type-check": "tsc --noEmit"
  },
  "devDependencies": {
    "@figma/plugin-typings": "^1.75.0",
    "@types/node": "^18.0.0",
    "esbuild": "^0.19.0",
    "typescript": "^5.0.0",
    "npm-run-all": "^4.1.5",
    "chokidar-cli": "^3.0.0"
  },
  "keywords": [
    "figma",
    "plugin",
    "glass",
    "effect"
  ],
  "author": "Prabin Pebam",
  "license": "MIT"
}
